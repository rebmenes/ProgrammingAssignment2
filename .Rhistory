return(res)
}
complete("specdata",1)
complete("specdata",1:6)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata",2,4,8,10,12)
complete("specdata",c(2,4,8,10,12))
complete("specdata",c(2,4,8))
complete<-function(directory, id=1:332){
idvec<-c(id)
good<-rep(0,length(idvec))
j=0
for(i in id){
j<-j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good[j]<-sum(complete.cases(data))
}
res<-data.frame("id"=idvec,"nobs"=good)
return(res)
}
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
6
submit()
submit()
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
polut<-data[[polutant]]
bad<-is.na(polut)
means[j]<-polut[!bad]
}
return(mean(means))
}
pollutantmean("specdata","sulphate",1:10)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
polut<-data$polutant
bad<-is.na(polut)
means[j]<-polut[!bad]
}
return(mean(means))
}
pollutantmean("specdata","solphate",1:10)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
means[j]<-mean(data[[polutant]][good])
}
return(mean(means))
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
means[j]<-mean(data[[pollutant]][good])
}
return(mean(means))
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","nitrate",23)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
bad<-is.na(data$pollutant)
#good<-complete.cases(data)
#means[j]<-mean(data[[pollutant]][good])
means[j]<-mean(data[[polutant]][!bad])
}
return(mean(means))
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
bad<-is.na(data$pollutant)
#good<-complete.cases(data)
#means[j]<-mean(data[[pollutant]][good])
means[j]<-mean(data[[pollutant]][!bad])
}
return(mean(means))
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
bad<-is.na(data[$pollutant[[pollutant]])
#good<-complete.cases(data)
#means[j]<-mean(data[[pollutant]][good])
means[j]<-mean(data[[pollutant]][!bad])
}
return(mean(means))
}
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
bad<-is.na(data[[pollutant]])
#good<-complete.cases(data)
#means[j]<-mean(data[[pollutant]][good])
means[j]<-mean(data[[pollutant]][!bad])
}
return(mean(means))
}
pollutantmean("specdata","sulfate",1:10)
x<-c(1,1,5,5)
mean(x)
pollutantmean("specdata","sulfate")
pollutantmean("specdata","sulfate",1)
pollutantmean("specdata","sulfate",10)
pollutantmean("specdata","sulfate",2)
pollutantmean("specdata","sulfate",3)
pollutantmean("specdata","sulfate",c(1,10))
submit()
2
submit()
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
means<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
bad<-is.na(data[[pollutant]])
#good<-complete.cases(data)
#means[j]<-mean(data[[pollutant]][good])
means[j]<-mean(data[[pollutant]][!bad])
}
return(means)
}
pollutantmean("specdata","nitrate",70:72)
pollutantmean("specdata","nitrate",70)
pollutantmean("specdata","nitrate",71)
pollutantmean("specdata","nitrate",72)
vec<-pollutantmean("specdata","nitrate",70:72)
ve
vec
mean(vec)
average(vec)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
sums<-rep(0,length(id))
size<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
bad<-is.na(data[[pollutant]])
#good<-complete.cases(data)
#means[j]<-mean(data[[pollutant]][good])
sums[j]<-sum(data[[pollutant]][!bad])
size[j]<-sum[!bad]
}
mean<-sum(sums)/sum(size)
return(mean)
}
pollutantmean("specdata","sulfate",1:10)
testdata<-read.csv("specdata/001.csv")
badtest<-is.na(data[["sulfate"]])
sum(badtest)
sum(!badtest)
pollutantmean<-function(directory,pollutant,id=1:332){
j=0
sums<-rep(0,length(id))
size<-rep(0,length(id))
for (i in id){
j=j+1
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
bad<-is.na(data[[pollutant]])
#good<-complete.cases(data)
#means[j]<-mean(data[[pollutant]][good])
sums[j]<-sum(data[[pollutant]][!bad])
size[j]<-sum(!bad)
}
mean<-sum(sums)/sum(size)
return(mean)
}
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","nitrate",70:72)
submit()
submit()
submit()
submit()
submit(4)
submit()
submit()
?cor
corr<-function(directory,threshold=0){
#initiate vector of correlations
corel<-rep(NAN,332)
#initiate counter of threshold passing files
j<-0
for (i in 1:332){
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
if (good>threshold){
j<-j+1
corel[j]<-cor(data["sulfate"],data["nitrate"],na.rm=TRUE)
}
}
result<-numberic(j)
if (j>0){
for (i in 1:j) result[i]<-corel[i]
}
return(result)
}
cr<-corr("specdata",150)
{
#initiate vector of correlations
corel<-rep(0,332)
#initiate counter of threshold passing files
j<-0
for (i in 1:332){
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
if (good>threshold){
j<-j+1
corel[j]<-cor(data["sulfate"],data["nitrate"],na.rm=TRUE)
}
}
result<-numberic(j)
if (j>0){
for (i in 1:j) result[i]<-corel[i]
}
return(result)
}
corr<-function(directory,threshold=0){
#initiate vector of correlations
corel<-rep(0,332)
#initiate counter of threshold passing files
j<-0
for (i in 1:332){
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
if (good>threshold){
j<-j+1
corel[j]<-cor(data["sulfate"],data["nitrate"],na.rm=TRUE)
}
}
result<-numberic(j)
if (j>0){
for (i in 1:j) result[i]<-corel[i]
}
return(result)
}
cr<-corr("specdata",150)
corr<-function(directory,threshold=0){
#initiate vector of correlations
corel<-rep(0,332)
#initiate counter of threshold passing files
j<-0
for (i in 1:332){
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
if (good>threshold){
j<-j+1
corel[j]<-cor(data["sulfate"],data["nitrate"],na.rm=TRUE)
}
}
result<-numeric(j)
if (j>0){
for (i in 1:j) result[i]<-corel[i]
}
return(result)
}
cr<-corr("specdata",150)
warnings()
corr<-function(directory,threshold=0){
#initiate vector of correlations
corel<-rep(0,332)
#initiate counter of threshold passing files
j<-0
for (i in 1:332){
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
numgood=sum(good)
if (numgood>threshold){
j<-j+1
corel[j]<-cor(data["sulfate"],data["nitrate"],na.rm=TRUE)
}
}
result<-numeric(j)
if (j>0){
for (i in 1:j) result[i]<-corel[i]
}
return(result)
}
cr<-corr("specdata",150)
corr<-function(directory,threshold=0){
#initiate vector of correlations
corel<-rep(0,332)
#initiate counter of threshold passing files
j<-0
for (i in 1:332){
ichar<-as.character(i)
if (i<10) filename<-paste(directory,"/00",ichar,".csv",sep="")
if (i>9 && i<100) filename<-paste(directory,"/0",ichar,".csv",sep="")
if (i>99) filename<-paste(directory,"/",ichar,".csv",sep="")
con<-file(filename,"r")
data<-read.csv(con)
close(con)
good<-complete.cases(data)
numgood=sum(good)
if (numgood>threshold){
j<-j+1
corel[j]<-cor(data["sulfate"],data["nitrate"],use="complete.obs")
}
}
result<-numeric(j)
if (j>0){
for (i in 1:j) result[i]<-corel[i]
}
return(result)
}
cr<-corr("specdata",150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr<-corr("specdata",5000)
summary(cr)
length(cr)
cr<-corr("specdata")
summary(cr)
length(cr)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
?<<-
setwd("C:/Users/Becky/Programming in R/ProgrammingAssignment2")
## The goal of the following two functions is to cache the inverse of a matrix.
## Since matrix inversion is an intensive task, we prefer not to repeat it unless
## the matrix is changed. In order to cache the inverted matrix we
## prepare a caching variable that maintains the matrix properties including
## the inverted matrix.
## The first function "makeCacheMatrix" maintains the cached value of the inverted
## matrix, so long as it is not changed. "makeCacheMatrix" returns 4 functions
## with roles of setting ("set" and "setinv") or getting ("get" and "getinv")
## both the original matrix and its inverse.
## these functions are later used by cacheSolve as input.
makeCacheMatrix <- function(x = matrix()) {
##In order to be sure that if the matrix is changed the inverse matrix in the cache
##is removed we set the value to NULL.
inv<-NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinv <- function(inverse) inv <<- inverse
getinv <- function() inv
list(set = set, get = get,
setinv = setinv,
getinv = getinv)
}
## "cacheSolve" has the role to either compute the inverse matrix or, if it already has
## been computed, provide the version that has been saved in the cache. "CacheSolve"
## takes as input the cached matrix which is the output of "makeCacheMatrix". If a
## cached version of the inverted matrix does not exist it will calculate it and will
## update the cached version by changing the value using the "setinv" function.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cached inverse of matrix")
return(inv)
}
data <- x$get()
inv <- solve(data, ...)
x$setinv(inv)
inv
}
x<-cbind(c(1,0),c(0,2))
mat<-makeCacheMatrix(x)
cacheSolve(mat)
x<-cbind(c(1,0),c(1,1))
mat<-makeCacheMatrix(x)
cacheSolve(mat)
exit
